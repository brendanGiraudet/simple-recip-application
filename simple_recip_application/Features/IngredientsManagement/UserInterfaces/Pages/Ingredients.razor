@page "/ingredients"
@using simple_recip_application.Components.Modal;
@using simple_recip_application.Features.IngredientsManagement.UserInterfaces.Components.IngredientCard;
@using simple_recip_application.Features.IngredientsManagement.UserInterfaces.Components.IngredientForm;
@using simple_recip_application.Features.IngredientsManagement.UserInterfaces.Pages;
@using Microsoft.AspNetCore.Components.Web;

@using static Microsoft.AspNetCore.Components.Web.RenderMode
@inherits Fluxor.Blazor.Web.Components.FluxorComponent;

@rendermode InteractiveServer
@attribute [StreamRendering]

<h3>@LabelsLocalizer["IngredientList"]</h3>

<button @onclick="OpenAddIngredientModal">@LabelsLocalizer["AddIngredient"]</button>

<p class="@GetLoadingVisibilityCssClass()">@MessagesLocalizer["LoadingInProgress"]</p>
<p class="@GetErrorVisibilityCssClass()" style="color: red;">@IngredientState.Value.ErrorMessage</p>

<div class="ingredient-grid @GetIngredientsVisibilityCssClass()">
    @foreach (var ingredient in IngredientState.Value.Ingredients)
    {
        <IngredientCard Ingredient="ingredient" OnEdit="OpenEditIngredientModal" OnDelete="DeleteIngredient" @rendermode=InteractiveServer />
    }
</div>

@if (IsIngredientModalOpen)
{
    <Modal OnClose="CloseIngredientModal">
        <IngredientForm IngredientId="SelectedIngredientId" OnCancel="CloseIngredientModal" />
    </Modal>
}