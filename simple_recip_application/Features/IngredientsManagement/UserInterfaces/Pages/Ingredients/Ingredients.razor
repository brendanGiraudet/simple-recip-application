@page "/ingredients"
@using simple_recip_application.Resources;

@inherits Fluxor.Blazor.Web.Components.FluxorComponent;

@rendermode InteractiveServer
@attribute [StreamRendering]
@attribute [Authorize(Policy = FeatureFlagsConstants.IngredientFeature)]

<SearchBar OnSearch="@OnSearchTermChanged" />

<div class="grid page-grid @GetIngredientsVisibilityCssClass()">

    @if (IngredientState.Value.Items.Count() == 0)
    {
        <p class="no-ingredients-message">@LabelsTranslator.NoIngredientsFound</p>
    }

    @foreach (var ingredient in IngredientState.Value.Items)
    {
        <Card TContent="IIngredientModel" Item="ingredient" ImageSource="@ingredient.Image.GetImageSource()"
            Title="@ingredient.Name" OnClick="OpenIngredientFormModalAsync" OnSelect="HandleSelection"
            EnableSelection="true" IsSelected="@(IngredientState.Value.SelectedItems.Contains(ingredient))" />
    }
</div>

<PaginationButtons CanPreviousClick="@CanPreviousClick()" OnPrevious="@OnPrevious" OnNext="@OnNext" />

<Loader IsVisible="@IngredientState.Value.IsLoading" />

<Modal OnClose="CloseIngredientModal" IsVisible="IngredientState.Value.FormModalVisibility">

    <IngredientForm Ingredient="_selectedIngredient" OnCancel="CloseIngredientModal" />
</Modal>

<OptionsMenu Options="GetOptions()" />