@inherits CustomComponentBase

<h3>@(Ingredient.Id.HasValue? LabelsTranslator.EditIngredient: LabelsTranslator.AddIngredient)</h3>

<EditForm Model="Ingredient" OnValidSubmit="Submit">
    <DataAnnotationsValidator />

    <div class="form-body">

        @* Name *@
        <div class="form-field">
            <label for="@nameof(IIngredientModel.Name)">@LabelsTranslator.IngredientName</label>
            <InputText id="@nameof(IIngredientModel.Name)" @bind-Value="Ingredient.Name" class="form-control" />
            <ValidationMessage For="@(() => Ingredient.Name)" />
        </div>

        @* Image *@
        <div class="form-field">
            <label for="@nameof(IIngredientModel.Image)">@LabelsTranslator.ImageLabel</label>
            <InputFile id="@nameof(IIngredientModel.Image)" OnChange="HandleImageUpload" accept="image/*"
                class="form-control" />
            <ValidationMessage For="@(() => Ingredient.Image)" />
        </div>
        
        @* MeasureUnit *@
        <div class="form-field">
            <label for="@nameof(IIngredientModel.MeasureUnit)">@LabelsTranslator.MeasureUnit</label>
            <InputText id="@nameof(IIngredientModel.MeasureUnit)" @bind-Value="@Ingredient.MeasureUnit" class="form-control" />
            <ValidationMessage For="@(() => Ingredient.MeasureUnit)" />
        </div>

    </div>

    <div class="form-buttons">
        <button type="button" @onclick="@(() => DeleteIngredient(Ingredient))"
                class="btn btn-danger @GetDeleleButtonCssClass()">
            @LabelsTranslator.Delete
        </button>

        <button type="button" @onclick="@(() => OnCancelAsync())" class="btn btn-secondary">
            @LabelsTranslator.Cancel
        </button>

        <button type="submit" class="btn btn-primary">
            @LabelsTranslator.SubmitButton
        </button>
        
    </div>
</EditForm>