@page "/recipe-planning"
@inherits FluxorComponent

<div class="weekly-recipes-container">
    @foreach (var day in GetOrderedDaysOfWeek())
    {
        <div class="daily-recipes">
            <h4>@day.FormattedDate</h4>

            @if (PlanifiedRecipeState.Value.RecipesGroupedByDay.TryGetValue(day.DayOfWeek, out var recipesForDay) &&
                    recipesForDay.Any())
            {
                <div class="grid">
                    @foreach (var planifiedRecipe in recipesForDay)
                    {
                        <Card TContent="IRecipeModel" Item="@planifiedRecipe.RecipeModel"
                            ImageSource="@planifiedRecipe.RecipeModel.Image.GetImageSource()"
                            Title="@planifiedRecipe.RecipeModel.Name"
                            OnClick="@(() => OpenRecipeDetails(planifiedRecipe.RecipeModel.Id.Value))">

                            <BodyContent>
                                <h5>@planifiedRecipe.RecipeModel.Name</h5>
                                <button class="btn btn-secondary" 
                                        @onclick="@(() => OpenChangeRecipeModal(planifiedRecipe))"
                                        @onclick:stopPropagation="true">
                                    @LabelsTranslator.Update
                                </button>
                                <button class="btn btn-primary" 
                                        @onclick="@(() => PlanifiedRecipeAutomaticaly(planifiedRecipe))"
                                        @onclick:stopPropagation="true">
                                    <span class="material-symbols-outlined">autorenew</span>
                                </button>
                            </BodyContent>

                        </Card>
                    }
                </div>
            }
            else
            {
                <button class="btn btn-primary add-recipe-btn" @onclick="@(() => OpenRecipeSelectionModal(day.DayOfWeek))">
                    @LabelsTranslator.AddRecipe
                </button>
            }
        </div>
    }
</div>

<PaginationButtons CanPreviousClick="true" OnPrevious="LoadPreviousWeek" OnNext="LoadNextWeek" />

<!-- Modal unique pour ajout ou modification -->
<Modal IsVisible="@_isRecipeModalVisible" OnClose="@CloseRecipeModal">
    <RecipeSelector OnRecipeSelected="@HandleRecipeSelected" />
</Modal>

<OptionsMenu Options="GetOptions()" />
