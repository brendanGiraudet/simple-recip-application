@inherits CustomComponentBase

<h3>@(Recipe.Id.HasValue? LabelsTranslator.EditRecipe: LabelsTranslator.AddRecipe)</h3>

<Loader IsVisible="@ImportState.Value.IsLoading" />

<EditForm Model="Recipe" OnValidSubmit="Submit">
    <DataAnnotationsValidator />

    <div class="form-body">
        <!-- Import recipe -->
        @if (_isImportButtonVisible)
        {
            <div class="form-field">
                <label for="import">@LabelsTranslator.ImportLabel</label>
                <InputFile id="import" OnChange="HandleImport" />
            </div>
        }

        <!-- Recipe Name -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.Name))">@LabelsTranslator.RecipeName</label>
            <InputText id="@(nameof(IRecipeModel.Name))" @bind-Value="Recipe.Name" class="form-control" />
            <ValidationMessage For="@(() => Recipe.Name)" />
        </div>

        <!-- Recipe Description -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.Description))">@LabelsTranslator.RecipeDescription</label>
            <InputText id="@(nameof(IRecipeModel.Description))" @bind-Value="Recipe.Description" class="form-control" />
            <ValidationMessage For="@(() => Recipe.Description)" />
        </div>

        <!-- Instructions -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.Instructions))">@LabelsTranslator.RecipeInstructions</label>
            <InputTextArea id="@(nameof(IRecipeModel.Instructions))" @bind-Value="Recipe.Instructions" class="form-control" />
            <ValidationMessage For="@(() => Recipe.Instructions)" />
        </div>

        <!-- Preparation Time -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.PreparationTime))">@LabelsTranslator.RecipePreparationTime</label>
            <InputDate id="@(nameof(IRecipeModel.PreparationTime))" Type="InputDateType.Time" TValue="TimeOnly" @bind-Value="Recipe.PreparationTime"
                class="form-control" />
            <ValidationMessage For="@(() => Recipe.PreparationTime)" />
        </div>

        <!-- Cooking Time -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.CookingTime))">@LabelsTranslator.RecipeCookingTime</label>
            <InputDate id="@(nameof(IRecipeModel.CookingTime))" Type="InputDateType.Time" TValue="TimeOnly" @bind-Value="Recipe.CookingTime"
                class="form-control" />
            <ValidationMessage For="@(() => Recipe.CookingTime)" />
        </div>

        <!-- Recipe Image -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.Image))">@LabelsTranslator.RecipeImageLabel</label>
            <InputFile id="@(nameof(IRecipeModel.Image))" OnChange="HandleImageUpload" accept="image/*" />
            <ValidationMessage For="@(() => Recipe.Image)" />
        </div>

        <!-- Recipe Category -->
        <div class="form-field">
            <label for="@(nameof(IRecipeModel.Category))">@LabelsTranslator.RecipeCategory</label>
            <InputText id="@(nameof(IRecipeModel.Category))" @bind-Value="Recipe.Category" class="form-control" />
            <ValidationMessage For="@(() => Recipe.Category)" />
        </div>

        <!-- Recipe Ingredients -->
        <div class="form-field" style="flex-direction: column;">
            <h3>@LabelsTranslator.Ingredients</h3>

            <RecipeIngredientSelector />
        </div>
        
        <!-- Recipe Tags -->
        <div class="form-field" style="flex-direction: column;">
            <h3>@LabelsTranslator.Tags</h3>

            <RecipeTagSelector />
        </div>
    </div>

    <!-- Submit and Cancel Buttons -->
    <div class="form-buttons">
        <button type="submit" class="btn btn-primary">
            @LabelsTranslator.SubmitButton
        </button>

        <button type="button" @onclick="@(() => OnCancelAsync())" class="btn btn-secondary">
            @LabelsTranslator.Cancel
        </button>

        <button type="button" @onclick="@(() => DeleteRecipe(Recipe))"
            class="btn btn-danger @GetDeleteButtonCssClass()">
            @LabelsTranslator.Delete
        </button>
    </div>
</EditForm>
